name: Build and Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build mimir-ai
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@soumarcelino"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Application
        run: yarn build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: ./out

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: ./out

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Deploy to S3 Bucket
        run: aws s3 sync ./out s3://mimir-ai-site --delete

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Extract version
        id: get_version
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Collect commits since last release
        id: commit-list
        run: |
          COMMITS=$(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0 --always @^)..@)
          echo "::set-output name=commits::$COMMITS"
          echo "Commits since last release:"
          echo "$COMMITS"

      - name: Bump version
        run: yarn version --patch

      - name: Push new version
        run: |
          git push origin HEAD --tags

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.new_version }}
          release_name: ${{ steps.get_version.outputs.new_version }}
          body: ${{ steps.commit-list.outputs.commits }}
          draft: false
          prerelease: false

      - name: Print Release Details
        run: |
          echo "Release created with the following details:"
          echo "Tag: ${{ steps.get_version.outputs.new_version }}"
          echo "Release Name: ${{ steps.get_version.outputs.new_version }}"
          echo "Commits:"
          echo "${{ steps.commit-list.outputs.commits }}"
